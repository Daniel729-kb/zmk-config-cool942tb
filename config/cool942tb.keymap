#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <9 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <23 22>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <11 12>;
        };

        minu {
            bindings = <&kp MINUS>;
            key-positions = <10 11>;
        };

        atm {
            bindings = <&kp AT_SIGN>;
            key-positions = <1 2>;
        };

        capsl {
            bindings = <&kp CAPS>;
            key-positions = <0 13>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC     &kp Q  &kp W         &kp E     &kp R      &kp T        &kp Y        &kp U  &kp I      &lt 5 O     &kp P      &kp DEL     &kp BSPC
&kp TAB     &kp A  &kp S         &kp D     &kp F      &kp G        &kp H        &kp J  &kp K      &kp L       &kp MINUS  &kp ENTER
&kp LSHIFT  &kp Z  &kp X         &kp C     &kp V      &kp B        &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH  &kp RSHIFT
                   &kp LEFT_ALT  &kp LGUI  &kp LCTRL  &lt 1 SPACE  &lt 2 SPACE
            >;
        };

        FUNCTION {
            bindings = <
&bt BT_SEL 1  &kp N1           &kp N2       &kp N3        &kp N4      &kp N5       &kp N6       &kp N7        &kp N8            &kp N9                &kp N0                 &kp DEL     &bt BT_CLR_ALL
&bt BT_SEL 2  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH      &kp DOLLAR  &kp PERCENT  &kp PERCENT  &kp CARET     &kp AMPERSAND     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ENTER
&bt BT_SEL 3  &kp PLUS         &kp MINUS    &kp ASTERISK  &kp SLASH   &kp EQUAL    &kp TILDE    &kp QUESTION  &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp QUESTION           &kp RSHIFT
                               &kp LCTRL    &kp LEFT_GUI  &kp LALT    &trans       &bootloader
            >;
        };

        NUM {
            bindings = <
&kp ESC     &kp F1       &kp F2     &kp F3             &kp F4         &kp F5          &kp F6         &kp F7          &kp F8          &kp F9           &kp F10    &kp DEL     &kp BSPC
&kp TAB     &kp AT_SIGN  &kp SQT    &kp DOUBLE_QUOTES  &kp SEMICOLON  &kp COLON       &kp LEFT       &kp DOWN_ARROW  &kp UP_ARROW    &kp RIGHT        &kp MINUS  &kp ENTER
&kp LSHIFT  &kp Z        &kp X      &kp C              &kp V          &kp B           &kp LC(SPACE)  &kp RG(SPACE)   &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp SLASH  &kp RSHIFT
                         &kp LCTRL  &kp LGUI           &kp LALT       &kp UNDERSCORE  &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESC     &kp Q  &kp W      &kp E     &kp R     &kp T        &kp Y        &kp U  &kp I      &kp O       &kp P      &kp DEL     &kp BSPC
&kp TAB     &kp A  &kp S      &kp D     &kp F     &kp G        &kp H        &kp J  &kp K      &kp L       &kp MINUS  &kp ENTER
&kp LSHIFT  &kp Z  &kp X      &kp C     &kp V     &kp B        &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH  &kp RSHIFT
                   &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &lt 2 SPACE
            >;
        };

        MOUSE {
            bindings = <
&kp ESC     &kp Q  &kp W      &kp E     &kp R     &kp T     &kp Y     &kp U  &lt 5 I    &mkp MB3    &mkp MB2   &kp DEL     &kp BSPC
&kp TAB     &kp A  &kp S      &kp D     &kp F     &kp G     &kp H     &kp J  &mkp MB1   &lt 5 L     &kp MINUS  &kp ENTER
&kp LSHIFT  &kp Z  &kp X      &kp C     &kp V     &kp B     &kp N     &kp M  &kp COMMA  &kp PERIOD  &kp SLASH  &kp RSHIFT
                   &kp LCTRL  &kp LGUI  &kp LALT  &mkp MB1  &mkp MB2
            >;
        };

        SCROLL {
            bindings = <
&kp ESC     &kp F1  &kp F2     &kp F3    &kp F4    &kp F5       &kp F6       &kp F7  &kp F8     &kp F9      &kp F10    &kp DEL     &kp BSPC
&kp TAB     &kp A   &kp S      &kp D     &kp F     &kp G        &kp H        &kp J   &kp K      &kp L       &kp MINUS  &kp ENTER
&kp LSHIFT  &kp Z   &kp X      &kp C     &kp V     &kp B        &kp N        &kp M   &kp COMMA  &kp PERIOD  &kp SLASH  &kp RSHIFT
                    &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &lt 2 SPACE
            >;
        };

        layer_6 {
            bindings = <
&kp ESC     &kp F1  &kp F2     &kp F3    &kp F4    &kp F5       &kp F6       &kp F7  &kp F8     &kp F9      &kp F10    &kp DEL     &kp BSPC
&kp TAB     &kp A   &kp S      &kp D     &kp F     &kp G        &kp H        &kp J   &kp K      &kp L       &kp MINUS  &kp ENTER
&kp LSHIFT  &kp Z   &kp X      &kp C     &kp V     &kp B        &kp N        &kp M   &kp COMMA  &kp PERIOD  &kp SLASH  &kp RSHIFT
                    &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &lt 2 SPACE
            >;
        };
    };
};
